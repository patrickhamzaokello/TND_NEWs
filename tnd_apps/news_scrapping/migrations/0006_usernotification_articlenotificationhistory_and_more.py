# Generated by Django 5.2.4 on 2025-10-29 21:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('news_scrapping', '0005_notificationtemplate_breakingnews_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('scheduled_digest', 'Scheduled Digest'), ('breaking_news', 'Breaking News'), ('category_update', 'Category Update')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('priority', models.CharField(blank=True, max_length=10)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('articles', models.ManyToManyField(related_name='user_notifications', to='news_scrapping.article')),
                ('breaking_news', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to='news_scrapping.breakingnews')),
                ('scheduled_notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to='news_scrapping.schedulednotification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_notifications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ArticleNotificationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_history', to='news_scrapping.article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_notification_history', to=settings.AUTH_USER_MODEL)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_history', to='news_scrapping.usernotification')),
            ],
            options={
                'db_table': 'article_notification_history',
            },
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', 'is_read', '-sent_at'], name='user_notifi_user_id_943377_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', '-sent_at'], name='user_notifi_user_id_53f986_idx'),
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['notification_type', '-sent_at'], name='user_notifi_notific_05d25c_idx'),
        ),
        migrations.AddIndex(
            model_name='articlenotificationhistory',
            index=models.Index(fields=['user', 'article'], name='article_not_user_id_c68080_idx'),
        ),
        migrations.AddIndex(
            model_name='articlenotificationhistory',
            index=models.Index(fields=['user', '-sent_at'], name='article_not_user_id_ef58e8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='articlenotificationhistory',
            unique_together={('user', 'article')},
        ),
    ]
